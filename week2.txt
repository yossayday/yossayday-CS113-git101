Week 2: Type,Operetor and Expression

1.Variable Names (ชื่อตัวแปล)
- การตั้งชื่อตัวแปรนั้นควรตั้งให้สอดคล้องกับการใช้งานเพื่อให้ง่ายและสะดวกต่อกการเรียกใช้ตัวแปร
- ตัวแปรไม่สามารถขึ้นต้นด้วยเครื่่องหมายพิเศษได้
- ถึงการตั้งชื่อตัวแปรจะไม่มีหลักไวยากรณ์ที่มากมายแต่ก็ควรตั้งให้สอดคล้องกับจุดประสงค์ที่ใช้งานอย่างชัดเจน

2.Data Types and Sizes (ประเภทข้อมูลและขนาด)
- ประเภทของตัวแปรนั้นมีหลายประเภทและแต่ละประเภทนั้นก็จะมีขนาดที่ต่างกัน
ตัวแปร char จะมีขนาด 1 บิท
ตัวแปร int จะมีขนาด 4 บิท
ตัวแปร float จะมีขนาด 4 บิท
ตัวแปร double จะมีขนาด 8 บิท
ตัวแปร short จะมีขนาด2  บิท

3.Constants (ค่าคงที่)
- ตัวแปรแต่ละตัวนั้นล้วนมีค่าคงที่ที่เป็นรูปแบบที่แตกต่างกัน
int นั้นจะมีค่าคงที่เป็นจำนวนเต็มมีหลักไม่มาก เช่น 56,79,7856
long นั้นจะมีค่าความจำที่มากขึ้นกว่า int 123456789l,123456789L
ีืunsigned long จะเป็นตัวเลขทีี่เก็บจำนวนเต็มตามด้วย ul หรือ UL 
float เป็นตัววเลขตามด้วยทศนิยม เช่น 1.56,789.52
รูปแบบการพิมพ์เลขฐานแปดและฐานสิบหก สามารถใช้ %0 และ %x ได้ตามลำดับ

4.Declarations (การประกาศ)
- ตัวแปรในภาษา c ต้องถูกประกาศก่อนที่จะเรียกใช้เท่านั้น***
- ใช้ในการระบุประเภทตัวแปร
- คำสั่งประกาศตัวแปรนั้นมีหลายรูปแบบยกตัวอย่างเช่น printf() หรือ puts()
 %d ใช้ประกาศตัวแแปรเป็นจำนวนเต็ม %f ใช้ประกาศตัวแปรเป็นจำนวนเต็ม %c ใช้ประกาศตัวแปรเป็น character
 %s ใช้ประกาศตัวแปรเป็น character or string
- การรับตัวแปรมีหลายรูปแบบ เช่น getchar() ใช้รับอักขระ 1 ตัวจาก stdin เข้ามาในโปรแกรม
- การส่งออกตัวแปรก็เช่น putchar() ใช้ส่งอักขระ 1 ตัวออกไปยัง stdout

5.Operators (ตัวดำเนินการ)
- เป็นการดำเนินการของตัวแปรที่ใช้เชื่อมระหว่างกัน
5.1)Arithmetic Operators
-มีเครื่องหมาย +, -, *, /, %
- % ไม่สามารถใช้กับตัวแปร float and double ได้ 
- เครื่องหมาย + และ - เป็น binary operator มี precedence เท่ากันซึ่งมี precedence ต่ำกว่าเครื่องหมาย *, / และ %
- หากมี precedence เท่ากันจะพิจารณาจากซ้ายไปขวา
5.2)Relational Operators and Logical Operators 
- Relational Operators เช่น >, >=, <, <=, ==, !=
- Logical Operators เช่น &&, ||, !
6.Bitwise Operators
- & หรือ and 
- | หรือ or




